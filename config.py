import telebot
from telebot import types
import gspread

TOKEN = '6089466461:AAFtYdjnPwNPp88FyXHxius4U9YRcJkc_og' \

bot = telebot.TeleBot(TOKEN)

gc = gspread.service_account(filename="json\my-test-378416-ed0f5f5170ee.json")
sh = gc.open("–ö–æ–ø–∏—è –ü—Ä–æ–º–æ–∫–æ–¥—ã")
worksheet = sh.sheet1

@bot.message_handler(commands=['start'])
def welcome_and_choice_categories(message):
    sti = open('static/sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
    markup = types.InlineKeyboardMarkup(row_width=1)
    values_list = worksheet.col_values(9)
    values_list = set(values_list)
    for i in values_list:
        item = types.InlineKeyboardButton(f'{i}', callback_data=f'{i}')
        markup.add(item)
    item_table = types.InlineKeyboardButton('–¢–∞–±–ª–∏—Ü–∞ —Å–æ –≤—Å–µ–º–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏', callback_data='table', url="https://docs.google.com/spreadsheets/d/1FhYGE5IODqbtXSfQGBs0BGUaUJYAWBGAC2SRWqYzf6M/edit#gid=0")
    markup.add(item_table)
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É', reply_markup=markup, parse_mode='html')


@bot.message_handler(content_types=['text'])
def welcome_and_choice_categories(message):
    bot.send_message(message.chat.id, '–î–∞–≤–∞–π –ª—É—á—à–µ –ø—Ä–æ–π–¥–µ–º—Å—è –ø–æ —Å–∫–∏–¥–∫–∞–º')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            cell_list = worksheet.findall(f"{call.data}")
            values_list = worksheet.col_values(9)
            values_list = set(values_list)
            if call.data == 'menu':
                menu(call)
            elif call.data == cell_list[0].value:
                if cell_list[0].value in  values_list:
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    list_of_category = []
                    for i in cell_list:
                        list_of_category.append(worksheet.acell(f'A{i.row}').value)
                    list_of_category = set(list_of_category)
                    for i in list_of_category:
                        item = types.InlineKeyboardButton(f'{i}', callback_data=f'{i}')
                        markup.add(item)
                    item2 = types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='menu')
                    markup.add(item2)
                    bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É',
                             reply_markup=markup, parse_mode='html')
                else:
                    message(call)
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    cell_list = worksheet.findall(f"{call.data}")
                    for i in cell_list:
                        formattext(call, int(i.row))
                    item1 = types.InlineKeyboardButton(f"{call.data}", callback_data=f"{call.data}")
                    item2 = types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', callback_data='menu')
                    markup.add(item1, item2)
                    bot.send_message(call.message.chat.id,
                                 "–ö—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–∏–º—Å—è –¥–∞–ª—å—à–µ?", reply_markup=markup)
    except Exception as e:
        print(repr(e))


def message(call):
    bot.send_message(call.message.chat.id, """–ß—Ç–æ–±—ã —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥üëå –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ: 
–ø–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏–ª–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∫—É–ø–æ–Ω–∞ —Å 
–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –≤–≤–µ—Å—Ç–∏ –µ–≥–æ –Ω–∞ —Å–∞–π—Ç–µ –∫–æ–º–ø–∞–Ω–∏–∏‚ò∫Ô∏è""")

def formattext(call, n):
    values_list = worksheet.row_values(n)
    bot.send_message(call.message.chat.id, f"""–ù–∞–∑–≤–∞–Ω–∏–µ: {values_list[0]}
–°–∫–∏–¥–∫–∞: {values_list[3]}
–û–ø–∏—Å–∞–Ω–∏–µ: {values_list[7]} 
–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {values_list[5]}
–†–µ–≥–∏–æ–Ω: {values_list[6]}
–°—Å—ã–ª–∫–∞: {values_list[4]}
–ü—Ä–æ–º–æ–∫–æ–¥ –Ω–∏–∂–µüëá""",
                     parse_mode='html')
    bot.send_message(call.message.chat.id, f"{values_list[2]}")

def menu(call):
    markup = types.InlineKeyboardMarkup(row_width=1)
    values_list = worksheet.col_values(9)
    values_list = set(values_list)
    for i in values_list:
        item = types.InlineKeyboardButton(f'{i}', callback_data=f'{i}')
        markup.add(item)
    item_table = types.InlineKeyboardButton('–¢–∞–±–ª–∏—Ü–∞ —Å–æ –≤—Å–µ–º–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞–º–∏', callback_data='table',
                                            url="https://docs.google.com/spreadsheets/d/1FhYGE5IODqbtXSfQGBs0BGUaUJYAWBGAC2SRWqYzf6M/edit#gid=0")
    markup.add(item_table)
    bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–∫–∏–¥–∫—É', reply_markup=markup,
                     parse_mode='html')



bot.polling(none_stop=True)

